name: CI

# This action runs through ImageIO's continous integration pipeline. It
# performs the following checks:
# 
# - Linting/Style (Black)
# - Invokes the unit tests in no-internet mode on python 3.8
# - runs unit test on cypthon in matrix mode (python 3.6, 3.7, 3.8, 3.9) x (3 major OS)
# - runs unit tests on pypy in matrix mode (pypy 3.6, 3.7) x (3 major OS)


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]


jobs:
  cpython_x86:
    name: "${{ matrix.os }} / CPython ${{ matrix.pyversion }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest"]
        pyversion: ["3.8"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Set up Python ${{ matrix.pyversion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pyversion }}
      - name: Install dependencies for tests
        shell: bash
        run: |
            pip install .[test,ffmpeg]
      - name: Install optional dependencies for tests
        if: matrix.TEST_FULL == 1
        run: |
            pip install -q -U simpleitk astropy
      - name: Run All Unit tests
        run: |
            coverage run -m pytest -v
      - name: Upload coverage to Codecov
        run: |
          curl -s https://codecov.io/bash | bash
        shell: bash


  arm64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt install -y python3 python3-pip make build-essential libssl-dev zlib1g-dev vim wget curl git zip unzip git-core gcc llvm libncurses5-dev libffi-dev liblzma-dev libbz2-dev libreadline-dev libsqlite3-dev libncursesw5-dev python-openssl xz-utils dos2unix && \
              ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && export DEBIAN_FRONTEND=noninteractive && apt-get install -y tzdata && dpkg-reconfigure --frontend noninteractive tzdata && \
              python3 --version && \
              pip3 install --upgrade pip && \
              pip3 --version && \
              pip3 install coverage scikit-build cmake && \
              pip3 install .[test,ffmpeg] && \
              pip3 install -q -U simpleitk astropy && \
              coverage run -m pytest -v && \
              curl -s https://codecov.io/bash | bash && \
              deactivate'
